[project]
name = "my_utils_library"
description = "A Python package that provides some utility functions."
version = "0.1.0"
license = {text = "MIT"}
authors = [
    {name = "Carlo Gatti", email = "carlo.gatti@me.com"}
]
dependencies = [
    "cryptography",
    "boto3",
    "mysql-connector-python"
]


[project.urls]
Homepage = "https://github.com/64rl0/my_utils_library.git"


[project.optional-dependencies]
prod = []
dev = []
test = []


[tool.black]
line-length = 100
# Black  normalize ' to " - setting to 1 will disable normalization
skip-string-normalization = 1
preview = true


[tool.isort]
line_length = 100
use_parentheses = true
sections = ['FUTURE', 'STDLIB', 'THIRDPARTY', 'MYLIB', 'FIRSTPARTY', 'LOCALFOLDER']
multi_line_output = 3
import_headings = {future="Special Imports", stdlib="Standard Library Imports", thirdparty="Third Party Library Imports", mylib ="My Library Imports", firstparty="Local Application Imports", localfolder="Local Folder (Relative) Imports"}
ensure_newline_before_comments = true
include_trailing_comma = true
split_on_trailing_comma = true
float_to_top = true
indented_import_headings = false
# Default Settings: Order imports by type, which is determined by case, in addition to alphabetically.
# These "types" are simply: CONSTANT_VARIABLE, CamelCaseClass, variable_or_function
# Force all imports to be sorted alphabetically within a section insteasd of by type first.
#force_alphabetical_sort_within_sections = true
# If enabled, isort will strip comments that exist within import lines. - doesn't seem to work so commented out
#ignore_comments = true
src_paths = ['src/*']
known_future_library = ['__future__', 'config']
extra_standard_library = []
known_third_party = []
known_mylib = ['my_utils_library']
known_first_party = []
known_local_folder = []


[tool.mypy]
# See https://mypy.readthedocs.io/en/latest/config_file.html for more mypy options.
# Enables the type-checker on the interior of functions without type annotations.
check_untyped_defs = true
# Displaying specific error codes makes it easier to silence specific errors
# See also https://mypy.readthedocs.io/en/latest/error_codes.html
show_error_codes = true
# Show source code snippets and location markers in error messages
pretty = true
# Suppresses errors about packages which do not implement type-hint sharing.
# See also https://mypy.readthedocs.io/en/latest/running_mypy.html#missing-imports.
#ignore_missing_imports = true
# Warns about unneeded '# type: ignore' comments.
warn_unused_ignores = true
